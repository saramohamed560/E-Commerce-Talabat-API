                                   Web Service
                   ------------------------------------------------
Is Function Provided by application to another applications
-System that provide this service called (Provider)
-system That Consume this function calles Consumer
-------------------------------------------------------------------------------------
                                   Web Api
                         ----------------------------
*Is A Web Service Stands For Application Programming Interface that defines rules to communicate with other sw systems
 **Web Api & MVC 
 1.MVC =>Model View Controller 
   Controller => Actions => Return Data To View
 2.Web Api =>M C => Model Controller (View is A Mobile App , Front End App)
   Controller => End Points => Return Data AS Json
---------------------------------------------------------------
                                Restful Api
-Structural Style Using Http Protocol
*Interface using between 2 systems to exchange information securly
-Stands For Representational State(Data) Transfer(Between 2 Computer System)
(Client Side , Server Side)

       (Search Difference between Soap &  Restful &GraphQl)
       (Search gRPC ,MicroService &  Monolithic)

-------------------------------------------------------------------------
                                Onion arch
4 Layers
1-Core Layer (Domain Layer)  -  > Class Library
Has All Project not implemented (Models , All Interfaces)
2-Repository Layer(Infrastructure) (Data Access Layer)
 Using Generic Repository , Unit Of Work
 Has DbContext 
 May Have more than one DbContext if there are more than 1 DB
3- Service Layer (Application Layer)
 Payment Service & Cashing Service , Security Service , .....
4-Presentaion Layer
MVc - Api - Mobile App
-----------------------------------------------------
**Starting With Core Layer
**Adding Migrations from project that have Connection string (Api)
**Adding Migrations Folder in project that have DbContext
------------------------------------------------------------
                               Data Seeding
*Occure one time per server

 ------------------Specification Design Pattern----------------
 -Secification DP Achieve OPEN CLOSE Principle
  ** To Create Dynamic Query
  ** my aim to make func to build  Deffered query
  **This Func take 2 param  
  -1.DbSet(Sequence) 
  -2.Object from class implement ISpecifications
  ---------------------------------------------------------------
  Steps
  1. Create Secification Folder in Core Layer (bec it is fixed in Project Level)
   1.1 Create ISpecification Interface (Signature of Prperty for each Componant(Linq Operator))
   1.2 Create BaseSpecification Class that implement Interface (contains common specs bet all queries)
  2.Create Function that build query in Repository Layer (change from DbContext To Another)
    - This Function is static and created in static class called SpecificationEvaluator
    -this class is static as we donot need to use it as type but only Utility class
 3- for each module create folder called As ProductsSpec inside it i will create customized classes
 that inhertit Base Class 
  ----------------------------------------------------------------
                        Error Types
1.Not Found => Access product isnot found
2.Server error=>(Exception) Null Reference Exception
3.BadRequst 
4.Validation Error type of bad request => send string instead of int
5.Not Founf End Pooint => Access End Point doesnot exist

**Handling NotFound ,Unauthorized ,BadRequest the same -->404
**Handling Validation Error Only One Time Per Project--> 400
   - Validation error response generated by Factory 
**Internal Server Error Handled Only One Time Per Project -->500
**Not Found End Point Error  Handled Only One Time Per Project -->404
   -  Not Found End Point Error  response generated by Middleware (useStatusCodeRedirectNotFound)
------------------------------------------------------------------------------------

**IEnumerable : If I need only to reteive data  and will iterate
 **IQuerable: If I need to make filtaration in DB then Retrive Data
 **ICollection : Retrive data and make operation(Add, Update,...)
 **IReadOnlyList : If I need only to reteive data 

 ---------------------------------------------------------
                       Pagination
 -connected model => has pagination in backend
 -disconnected model => back end doesnoy have pagination
 - i need two info from front end 1.Page size(count of product in each page) 2. Page Index
 ** if func or end point has more than 3 param it is prefered to make class put them on it

 **Any endpoint use pagination Has Standered Response Which consists of 4 Property
 1.PageIndex
 2.PageSize
 3.Count
 4.Data itself
 --------------------------------------------------------------------
 Store Customer Basket Data i Memory DB (RAM of DB) By Using Redis Tool

 Redis  = > search on redis in Amazon WebSite

 --------------------------------------------------------
 **Basket Module
 1.core
    -entities--> BaskrtCustomer  , BasketItem
    -Interfaces ->IBasketRepository 
 2.Repository
    -BasketRepository 
 3.Api
    -BasketController

----------------------------------------------
JwT => jSON wEB tOKEN
TOKEN => ENCRYPTED STRING
 
